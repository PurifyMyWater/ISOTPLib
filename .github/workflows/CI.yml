# https://cpp-linter.github.io/cpp-linter-action/

name: DoCANCppLib CI

on:
  push:
  pull_request:

jobs:
  Test:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Cache git submodules
        uses: actions/cache@v4
        with:
          key: "${{ runner.os }}-git-${{ hashFiles('.git/modules/*/HEAD') }}" # Cache will be dismissed if any submodule change
          path: ".git"
          restore-keys: "${{ runner.os }}-git-"

      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build .

      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ./Tests/Google_Tests_run

  Linter:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Cache git submodules
        uses: actions/cache@v4
        with:
          key: "${{ runner.os }}-git-${{ hashFiles('.git/modules/*/HEAD') }}" # Cache will be dismissed if any submodule change
          path: ".git"
          restore-keys: "${{ runner.os }}-git-"
          
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build
      
      - name: Linter
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: 19
          ignore: 'CANShim/|Tests/DoCANCppLibTests/'
          style: '' # 'file'  # Use .clang-format config file
          tidy-checks: '' # Use .clang-tidy config file
          database: '${{runner.workspace}}/build'
          step-summary: true
          tidy-review: true
          format-review: true
          lines-changed-only: false # Only Check the lines that have changed
          files-changed-only: false # Only check the files that have changed
          # only 'update' a single comment in a pull request thread.
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}

      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        run: exit 1
